---
import { marked } from "marked";
import { getCollection } from "astro:content";
import { Image } from "astro:assets";
import ProjectsLayout from "../../layouts/ProjectsLayout.astro";

export async function getStaticPaths() {
    const projectsEntries = await getCollection("projects");
    return projectsEntries.map((entry) => ({
        params: { slug: entry.slug },
        props: { entry },
    }));
}

const { entry } = Astro.props;
const { data } = entry;
const { Content } = await entry.render();
let content = null;
if (data.links?.githubReadme) {  
    const response = await fetch(data.links.githubReadme);
    const markdown = await response.text();
    content = marked.parse(markdown);
}
---

<ProjectsLayout title={entry.data.title} description={entry.data.description}>
    <div class="m-5 md:m-10 card">
        <div class="hero py-10 rounded-box bg-black text-white mb-12 shadow-2xl">
            <div class="hero-content flex-col lg:flex-row">
                <Image
                    src={data.image}
                    alt={data.title}
                    inferSize
                    class="justify-start max-w-sm w-full rounded-lg shadow-2xl"
                />
                <div>
                    <h1 class="text-xl md:text-5xl font-bold md:ml-5">{data.title}</h1>
                    <div class="py-4 md:ml-5">
                        {data.description} 
                        <br />
                        {<span class="text-sm text-info">Date: {data.date}</span>}
                        <div class="flex flex-wrap gap-2 pt-2">
                            {
                                data.tech.map((tech) => (
                                    <span class="badge badge-success">{tech}</span>
                                ))
                            }
                        </div>
                    </div>

                    <ul class="flex menu menu-horizontal gap-5">
                        {data.links.demo && 
                        <li class="bg-base-200 rounded-box ">
                            <a aria-label="demo link" href={data.links.demo} target="_blank">
                                Demo Link
                                <dotlottie-player
                                    autoplay
                                    loop
                                    playMode="normal"
                                    src="/src/assets/arrow.lottie"
                                    class="size-8 rounded-full -rotate-45 bg-white "
                                >
                                </dotlottie-player>
                            </a>
                        </li>}
                        <li class="bg-base-200 rounded-box">
                            <a aria-label="github" href={data.links.github} target="_blank">
                                Github Link
                                <dotlottie-player
                                    autoplay
                                    loop
                                    playMode="normal"
                                    src="/src/assets/githubBlack.lottie"
                                    class="size-8 rounded-box bg-white"
                                >
                                </dotlottie-player>
                            </a>
                        </li>
                    </ul>
                </div>
            </div>
        </div>
        <div
            class="prose dark:prose-invert
                        prose-h1:font-bold prose-h1:text-primary
                        prose-h2:text-secondary prose-h3:text-secondary prose-h4:text-secondary prose-h5:text-secondary prose-h6:text-secondary
                        prose-a:text-blue-600 prose-p:text-justify prose-img:rounded-xl
                        prose-headings:underline md:mx-auto"
        >
            {content ? <article set:html={content} /> : <Content />}
        </div>
    </div>
</ProjectsLayout>
